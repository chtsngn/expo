--- android/CMakeLists.txt	2022-06-18 23:30:18.000000000 +0800
+++ android/CMakeLists.txt	2022-06-18 23:30:58.000000000 +0800
@@ -34,14 +34,14 @@
         "${PROJECT_SOURCE_DIR}/cpp/rnskia-android/RNSkDrawViewImpl.cpp"
         "${PROJECT_SOURCE_DIR}/cpp/rnskia-android/SkiaOpenGLRenderer.cpp"
         
-        "${PROJECT_SOURCE_DIR}/cpp/jsi/JsiHostObject.cpp"
+        "${PROJECT_SOURCE_DIR}/../cpp/jsi/JsiHostObject.cpp"
 
-        "${PROJECT_SOURCE_DIR}/cpp/rnskia/RNSkManager.cpp"
-        "${PROJECT_SOURCE_DIR}/cpp/rnskia/RNSkDrawView.cpp"
-        "${PROJECT_SOURCE_DIR}/cpp/rnskia/RNSkDispatchQueue.cpp"
+        "${PROJECT_SOURCE_DIR}/../cpp/rnskia/RNSkManager.cpp"
+        "${PROJECT_SOURCE_DIR}/../cpp/rnskia/RNSkDrawView.cpp"
+        "${PROJECT_SOURCE_DIR}/../cpp/rnskia/RNSkDispatchQueue.cpp"
 
 
-        "${PROJECT_SOURCE_DIR}/cpp/api/third_party/CSSColorParser.cpp"
+        "${PROJECT_SOURCE_DIR}/../cpp/api/third_party/CSSColorParser.cpp"
         
 )
 
@@ -56,28 +56,28 @@
         "${NODE_MODULES_DIR}/react-native/ReactCommon/react/nativemodule/core"
         "${NODE_MODULES_DIR}/react-native/ReactAndroid/src/main/java/com/facebook/react/turbomodule/core/jni"
 
-        cpp/skia/include/config/
-        cpp/skia/include/core/
-        cpp/skia/include/effects/
-        cpp/skia/include/utils/
-        cpp/skia/include/pathops/
-        cpp/skia/modules/
-        cpp/skia/include/
-        cpp/skia
-
-        cpp/api
-        cpp/jsi
-        cpp/jni/include
-        cpp/rnskia-android
-        cpp/rnskia
-        cpp/rnskia/values
-        cpp/utils  
+        ${PROJECT_SOURCE_DIR}/../cpp/skia/include/config/
+        ${PROJECT_SOURCE_DIR}/../cpp/skia/include/core/
+        ${PROJECT_SOURCE_DIR}/../cpp/skia/include/effects/
+        ${PROJECT_SOURCE_DIR}/../cpp/skia/include/utils/
+        ${PROJECT_SOURCE_DIR}/../cpp/skia/include/pathops/
+        ${PROJECT_SOURCE_DIR}/../cpp/skia/modules/
+        ${PROJECT_SOURCE_DIR}/../cpp/skia/include/
+        ${PROJECT_SOURCE_DIR}/../cpp/skia
+
+        ${PROJECT_SOURCE_DIR}/../cpp/api
+        ${PROJECT_SOURCE_DIR}/../cpp/jsi
+        ${PROJECT_SOURCE_DIR}/cpp/jni/include
+        ${PROJECT_SOURCE_DIR}/cpp/rnskia-android
+        ${PROJECT_SOURCE_DIR}/../cpp/rnskia
+        ${PROJECT_SOURCE_DIR}/../cpp/rnskia/values
+        ${PROJECT_SOURCE_DIR}/../cpp/utils  
 
         ${libfbjni_include_DIRS}
 )
 
 # Import prebuilt SKIA libraries
-set (SKIA_LIBS_PATH "${CMAKE_CURRENT_SOURCE_DIR}/../libs/android/${ANDROID_ABI}")
+set (SKIA_LIBS_PATH "${CMAKE_CURRENT_SOURCE_DIR}/../../../../common/jniLibs/${ANDROID_ABI}")
 add_library(skia STATIC IMPORTED)
 set_property(TARGET skia PROPERTY IMPORTED_LOCATION "${SKIA_LIBS_PATH}/libskia.a")
 
--- android/build.gradle	2022-06-18 23:30:21.000000000 +0800
+++ android/build.gradle	2022-06-18 23:30:58.000000000 +0800
@@ -43,13 +43,17 @@
   throw new GradleException("React-Native-Skia: Failed to find node_modules/ path!")
 }
 
-def nodeModules = findNodeModules(projectDir)
+def nodeModules = Paths.get(projectDir.getPath(), '../../../../../..', 'react-native-lab').toString()
 logger.warn("react-native-skia: node_modules/ found at: ${nodeModules}")
 
 def sourceBuild = false
 def defaultDir = null
 def androidSourcesDir = null
 def androidSourcesName = 'React Native sources'
+def reactNativeArchitectures() {
+    def value = project.getProperties().get("reactNativeArchitectures")
+    return value ? value.split(",") : ["armeabi-v7a", "x86", "x86_64", "arm64-v8a"]
+}
 
 if (rootProject.ext.has('reactNativeAndroidRoot')) {
   defaultDir = rootProject.ext.get('reactNativeAndroidRoot')
@@ -70,7 +74,7 @@
 }
 
 def prebuiltDir = sourceBuild
-    ? "$nodeModules/react-native/ReactAndroid/src/main/jni/prebuilt/lib"
+    ? Paths.get(findProject(":ReactAndroid").getProjectDir().toString(), "build", "intermediates", "library_*", "*", "jni")
     : "$buildDir/react-native-0*/jni"
 
 
@@ -111,7 +115,7 @@
         externalNativeBuild {
             cmake {
                 cppFlags "-fexceptions", "-frtti", "-std=c++1y", "-DONANDROID"
-                abiFilters 'x86', 'x86_64', 'armeabi-v7a', 'arm64-v8a'
+                abiFilters (*reactNativeArchitectures())
                 arguments '-DANDROID_STL=c++_shared',
                           "-DREACT_NATIVE_VERSION=${REACT_NATIVE_VERSION}",
                           "-DNODE_MODULES_DIR=${nodeModules}",
@@ -175,8 +179,6 @@
     //noinspection GradleDynamicVersion
     extractJNI("com.facebook.fbjni:fbjni:0.2.2")
 
-    def rnAAR = fileTree("${nodeModules}/react-native/android").matching({ it.include "**/**/*.aar" }).singleFile
-    extractJNI(files(rnAAR))
 }
 
 afterEvaluate { project ->
@@ -240,4 +242,16 @@
 afterEvaluate {
   nativeBuildDependsOn(extractAARHeaders, null)
   nativeBuildDependsOn(extractJNIFiles, null)  
-}
\ No newline at end of file
+}
+
+tasks.whenTaskAdded { task ->
+  if (!task.name.contains("Clean") && (task.name.contains('externalNativeBuild') || task.name.startsWith('configureCMake'))) {
+    if (sourceBuild) {
+      def buildType = task.name.endsWith('Debug') ? 'Debug' : 'Release'
+      task.dependsOn(":ReactAndroid:copy${buildType}JniLibsProjectOnly")
+    }
+  } else if (task.name.startsWith('generateJsonModel') && sourceBuild) {
+    def buildType = task.name.endsWith('Debug') ? 'Debug' : 'Release'
+    task.dependsOn(":ReactAndroid:copy${buildType}JniLibsProjectOnly")
+  }
+}
